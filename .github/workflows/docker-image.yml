name: CI – Build & Push Docker Images

on:
  push:
    branches: [ master ]
    tags:    [ 'v*' ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # чтобы GITHUB_TOKEN мог пушить в GHCR

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ---- API IMAGE ----
      - name: Docker metadata for API
        id: meta-api
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/api
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=ref,event=branch
            type=sha,format=short
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Build & push API
        uses: docker/build-push-action@v5
        with:
          context: ./tbc
          file:    ./tbc/Dockerfile
          push:    true
          tags:    ${{ steps.meta-api.outputs.tags }}
          labels:  ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max

      # ---- FRONTEND IMAGE ----
      - name: Docker metadata for Frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=ref,event=branch
            type=sha,format=short
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
        
      - name: Build & push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./tbc/clientapp
          file:    ./tbc/clientapp/Dockerfile
          push:    true
          tags:    ${{ steps.meta-frontend.outputs.tags }}
          labels:  ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to:   type=gha,mode=max
