# (1) Базовый образ: SDK, чтобы потом копировать из него
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build-env

# (2) Образ, где мы установим docker, чтобы потом использовать
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
# Устанавливаем docker в "base"
RUN apt-get update && apt-get install -y docker.io
# Не переключаемся на другого пользователя, остаёмся root
# USER $APP_UID  <-- убираем, чтобы иметь доступ к docker

WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# (3) Собираем ваше приложение TBC
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["TBC/TBC.csproj", "TBC/"]
RUN dotnet restore "./TBC/TBC.csproj"
COPY . .
WORKDIR "/src/TBC"
RUN dotnet build "./TBC.csproj" -c $BUILD_CONFIGURATION -o /app/build

# (4) Публикуем
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./TBC.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# (5) Финальный образ = base + результаты publish
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENV ASPNETCORE_URLS=http://+:8080;https://+:8081
ENTRYPOINT ["dotnet", "TBC.dll"]
