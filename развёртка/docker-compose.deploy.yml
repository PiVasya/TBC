name: tbc

services:
  api:
    image: ghcr.io/pivasya/tbc/api:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__Default=Host=db;Port=5432;Database=tbcdb;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
    ports:
      - "5000:80"
    depends_on:
      - db

  frontend:
    image: ghcr.io/pivasya/tbc/frontend:latest
    restart: unless-stopped
    ports:
      - "3000:80"

  db:
    image: postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  proxy:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - frontend

volumes:
  db_data:
